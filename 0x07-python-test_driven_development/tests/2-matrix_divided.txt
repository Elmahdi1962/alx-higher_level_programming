The 2-matrix_divided module
============================

Using``matrix_divided``
------------------------

Importing matrix_divided from 2-matrix_divided

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now Testing:-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

    testing if one of the inner list numbers is a string

    >>> r = matrix_divided([[1, 2, 3],[4, 5, '6']], 3) # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
***************************************************

    testing if one of the inner list numbers is a True

    >>> r = matrix_divided([[1, True, 3],[4, 5, 6]], 3) # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
***************************************************

    testing if one of the inner list numbers is a False

    >>> r = matrix_divided([[False, 2, 3],[4, 5, 6]], 3) # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
***************************************************

    testing if one of the inner list numbers is a float

    >>> r = matrix_divided([[2.2, 2, 3],[4, 5, 6]], 2)
    >>> print(r)
    [[1.1, 1.0, 1.5], [2.0, 2.5, 3.0]]

***************************************************

    testing if one of the inner lists length bigger than the other

    >>> r = matrix_divided([[2.2, 2, 3],[4, 5, 6, 7]], 2) # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

***************************************************

    testing with a matrix that has list of integers only

    >>> r = matrix_divided([[2, 2, 3],[4, 5, 6]], 2)
    >>> print(r)
    [[1.0, 1.0, 1.5], [2.0, 2.5, 3.0]]

***************************************************

    testing with a division number == 0

    >>> r = matrix_divided([[2, 2, 3],[4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

***************************************************

    testing with a division number == '0' string

    >>> r = matrix_divided([[2, 2, 3],[4, 5, 6]], '0')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

***************************************************

    testing with a division number that makes results with lot of decimal places
	like 3

    >>> r = matrix_divided([[1, 2, 4],[5, 7, 8]], 3)
    >>> print(r)
    [[0.33, 0.67, 1.33], [1.67, 2.33, 2.67]]

***************************************************

    testing with no arguments

    >>> r = matrix_divided() # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: ...

***************************************************
